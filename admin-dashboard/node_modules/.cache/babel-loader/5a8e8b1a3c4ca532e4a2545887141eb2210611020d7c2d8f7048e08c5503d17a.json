{"ast":null,"code":"import axios from'axios';import{toast}from'react-toastify';// Create axios instance\nconst api=axios.create({baseURL:process.env.REACT_APP_API_URL||'http://localhost:3000',timeout:10000,headers:{'Content-Type':'application/json'}});// Request interceptor\napi.interceptors.request.use(config=>{// Add auth token if available\nconst token=localStorage.getItem('adminToken');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;},error=>{return Promise.reject(error);});// Response interceptor\napi.interceptors.response.use(response=>{return response;},error=>{var _error$response,_error$response2,_error$response3;// Handle common errors\nif(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){// Unauthorized - clear auth data and redirect to login\nlocalStorage.removeItem('adminToken');localStorage.removeItem('adminData');delete api.defaults.headers.common['Authorization'];// Only show toast if not already on login page\nif(!window.location.pathname.includes('/login')){toast.error('Session expired. Please login again.');window.location.href='/login';}}else if(((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)===403){toast.error('Access denied. Insufficient permissions.');}else if(((_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.status)>=500){toast.error('Server error. Please try again later.');}else if(error.code==='ECONNABORTED'){toast.error('Request timeout. Please try again.');}else if(!error.response){toast.error('Network error. Please check your connection.');}return Promise.reject(error);});// API service methods\nexport const adminAPI={// Admin Authentication\nlogin:credentials=>api.post('/api/Admin/signin',credentials),// Admin Management\ncreateAdmin:adminData=>api.post('/api/Admin/signup',adminData),getAllAdmins:()=>api.get('/api/Admin/all'),updateAdmin:(id,adminData)=>api.put(`/api/Admin/${id}`,adminData),deleteAdmin:id=>api.delete(`/api/Admin/${id}`)};export const productAPI={// Product Management\ngetAllProducts:params=>api.get('/api/products',{params}),getProductById:id=>api.get(`/api/products/${id}`),createProduct:productData=>{console.log('Creating product:',productData);return api.post('/api/products',productData);},updateProduct:(id,productData)=>{console.log('Updating product ID:',id,'with data:',productData);return api.put(`/api/products/${id}`,productData);},deleteProduct:id=>{console.log('Deleting product ID:',id);return api.delete(`/api/products/${id}`);}};export const userAPI={// User Management\ngetAllUsers:params=>api.get('/api/customers/all',{params}),getUserById:id=>api.get(`/api/customers/${id}`),deleteUser:id=>api.delete(`/api/customers/${id}`),getUserStats:()=>api.get('/api/customers/stats')};export const transactionAPI={// Transaction Management\ngetAllTransactions:params=>api.get('/api/transactions',{params}),getTransactionById:id=>api.get(`/api/transactions/${id}`),getUserTransactions:(userId,params)=>api.get(`/api/transactions/user/${userId}`,{params}),exportTransactions:params=>api.get('/api/transactions/export/csv',{params,responseType:'blob'// For file download\n}),getTransactionStats:()=>api.get('/api/transactions/stats')};export default api;","map":{"version":3,"names":["axios","toast","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","_error$response2","_error$response3","status","removeItem","defaults","common","window","location","pathname","includes","href","code","adminAPI","login","credentials","post","createAdmin","adminData","getAllAdmins","get","updateAdmin","id","put","deleteAdmin","delete","productAPI","getAllProducts","params","getProductById","createProduct","productData","console","log","updateProduct","deleteProduct","userAPI","getAllUsers","getUserById","deleteUser","getUserStats","transactionAPI","getAllTransactions","getTransactionById","getUserTransactions","userId","exportTransactions","responseType","getTransactionStats"],"sources":["D:/Mostafa/Work/node-project/Node-project/admin-dashboard/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3000',\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    // Add auth token if available\r\n    const token = localStorage.getItem('adminToken');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    // Handle common errors\r\n    if (error.response?.status === 401) {\r\n      // Unauthorized - clear auth data and redirect to login\r\n      localStorage.removeItem('adminToken');\r\n      localStorage.removeItem('adminData');\r\n      delete api.defaults.headers.common['Authorization'];\r\n      \r\n      // Only show toast if not already on login page\r\n      if (!window.location.pathname.includes('/login')) {\r\n        toast.error('Session expired. Please login again.');\r\n        window.location.href = '/login';\r\n      }\r\n    } else if (error.response?.status === 403) {\r\n      toast.error('Access denied. Insufficient permissions.');\r\n    } else if (error.response?.status >= 500) {\r\n      toast.error('Server error. Please try again later.');\r\n    } else if (error.code === 'ECONNABORTED') {\r\n      toast.error('Request timeout. Please try again.');\r\n    } else if (!error.response) {\r\n      toast.error('Network error. Please check your connection.');\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// API service methods\r\nexport const adminAPI = {\r\n  // Admin Authentication\r\n  login: (credentials) => api.post('/api/Admin/signin', credentials),\r\n  \r\n  // Admin Management\r\n  createAdmin: (adminData) => api.post('/api/Admin/signup', adminData),\r\n  getAllAdmins: () => api.get('/api/Admin/all'),\r\n  updateAdmin: (id, adminData) => api.put(`/api/Admin/${id}`, adminData),\r\n  deleteAdmin: (id) => api.delete(`/api/Admin/${id}`),\r\n};\r\n\r\nexport const productAPI = {\r\n  // Product Management\r\n  getAllProducts: (params) => api.get('/api/products', { params }),\r\n  getProductById: (id) => api.get(`/api/products/${id}`),\r\n  createProduct: (productData) => {\r\n    console.log('Creating product:', productData);\r\n    return api.post('/api/products', productData);\r\n  },\r\n  updateProduct: (id, productData) => {\r\n    console.log('Updating product ID:', id, 'with data:', productData);\r\n    return api.put(`/api/products/${id}`, productData);\r\n  },\r\n  deleteProduct: (id) => {\r\n    console.log('Deleting product ID:', id);\r\n    return api.delete(`/api/products/${id}`);\r\n  },\r\n};\r\n\r\nexport const userAPI = {\r\n  // User Management\r\n  getAllUsers: (params) => api.get('/api/customers/all', { params }),\r\n  getUserById: (id) => api.get(`/api/customers/${id}`),\r\n  deleteUser: (id) => api.delete(`/api/customers/${id}`),\r\n  getUserStats: () => api.get('/api/customers/stats'),\r\n};\r\n\r\nexport const transactionAPI = {\r\n  // Transaction Management\r\n  getAllTransactions: (params) => api.get('/api/transactions', { params }),\r\n  getTransactionById: (id) => api.get(`/api/transactions/${id}`),\r\n  getUserTransactions: (userId, params) => api.get(`/api/transactions/user/${userId}`, { params }),\r\n  exportTransactions: (params) => api.get('/api/transactions/export/csv', {\r\n    params,\r\n    responseType: 'blob' // For file download\r\n  }),\r\n  getTransactionStats: () => api.get('/api/transactions/stats'),\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}