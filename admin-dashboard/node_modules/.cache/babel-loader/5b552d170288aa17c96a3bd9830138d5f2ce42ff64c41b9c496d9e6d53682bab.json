{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{toast}from'react-toastify';import api from'../services/api';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[isAuthenticated,setIsAuthenticated]=useState(false);const[admin,setAdmin]=useState(null);const[loading,setLoading]=useState(true);// Check if user is already logged in on app start\nuseEffect(()=>{const token=localStorage.getItem('adminToken');const adminData=localStorage.getItem('adminData');if(token&&adminData){try{const parsedAdmin=JSON.parse(adminData);setAdmin(parsedAdmin);setIsAuthenticated(true);// Set the token in axios headers\napi.defaults.headers.common['Authorization']=`Bearer ${token}`;}catch(error){console.error('Error parsing admin data:',error);localStorage.removeItem('adminToken');localStorage.removeItem('adminData');}}setLoading(false);},[]);const login=async credentials=>{try{setLoading(true);const response=await api.post('/api/Admin/signin',credentials);if(response.data.success){const{token,data}=response.data;const adminData=data.admin;// Store token and admin data\nlocalStorage.setItem('adminToken',token);localStorage.setItem('adminData',JSON.stringify(adminData));// Set axios default header\napi.defaults.headers.common['Authorization']=`Bearer ${token}`;// Update state\nsetAdmin(adminData);setIsAuthenticated(true);toast.success('Login successful!');return{success:true};}else{toast.error(response.data.message||'Login failed');return{success:false,message:response.data.message};}}catch(error){var _error$response,_error$response$data;const errorMessage=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Login failed. Please try again.';toast.error(errorMessage);return{success:false,message:errorMessage};}finally{setLoading(false);}};const logout=()=>{// Clear storage\nlocalStorage.removeItem('adminToken');localStorage.removeItem('adminData');// Clear axios header\ndelete api.defaults.headers.common['Authorization'];// Update state\nsetAdmin(null);setIsAuthenticated(false);toast.info('Logged out successfully');};const value={isAuthenticated,admin,loading,login,logout};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","toast","api","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","isAuthenticated","setIsAuthenticated","admin","setAdmin","loading","setLoading","token","localStorage","getItem","adminData","parsedAdmin","JSON","parse","defaults","headers","common","error","console","removeItem","login","credentials","response","post","data","success","setItem","stringify","message","_error$response","_error$response$data","errorMessage","logout","info","value","Provider"],"sources":["D:/Mostafa/Work/node-project/Node-project/admin-dashboard/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport api from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [admin, setAdmin] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Check if user is already logged in on app start\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('adminToken');\r\n    const adminData = localStorage.getItem('adminData');\r\n    \r\n    if (token && adminData) {\r\n      try {\r\n        const parsedAdmin = JSON.parse(adminData);\r\n        setAdmin(parsedAdmin);\r\n        setIsAuthenticated(true);\r\n        // Set the token in axios headers\r\n        api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      } catch (error) {\r\n        console.error('Error parsing admin data:', error);\r\n        localStorage.removeItem('adminToken');\r\n        localStorage.removeItem('adminData');\r\n      }\r\n    }\r\n    \r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await api.post('/api/Admin/signin', credentials);\r\n      \r\n      if (response.data.success) {\r\n        const { token, data } = response.data;\r\n        const adminData = data.admin;\r\n        \r\n        // Store token and admin data\r\n        localStorage.setItem('adminToken', token);\r\n        localStorage.setItem('adminData', JSON.stringify(adminData));\r\n        \r\n        // Set axios default header\r\n        api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n        \r\n        // Update state\r\n        setAdmin(adminData);\r\n        setIsAuthenticated(true);\r\n        \r\n        toast.success('Login successful!');\r\n        return { success: true };\r\n      } else {\r\n        toast.error(response.data.message || 'Login failed');\r\n        return { success: false, message: response.data.message };\r\n      }\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || 'Login failed. Please try again.';\r\n      toast.error(errorMessage);\r\n      return { success: false, message: errorMessage };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    // Clear storage\r\n    localStorage.removeItem('adminToken');\r\n    localStorage.removeItem('adminData');\r\n    \r\n    // Clear axios header\r\n    delete api.defaults.headers.common['Authorization'];\r\n    \r\n    // Update state\r\n    setAdmin(null);\r\n    setIsAuthenticated(false);\r\n    \r\n    toast.info('Logged out successfully');\r\n  };\r\n\r\n  const value = {\r\n    isAuthenticated,\r\n    admin,\r\n    loading,\r\n    login,\r\n    logout\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}