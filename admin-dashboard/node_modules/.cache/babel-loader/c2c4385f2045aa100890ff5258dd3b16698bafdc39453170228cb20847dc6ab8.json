{"ast":null,"code":"var _jsxFileName = \"D:\\\\Mostafa\\\\Work\\\\node-project\\\\Node-project\\\\admin-dashboard\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [admin, setAdmin] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is already logged in on app start\n  useEffect(() => {\n    const token = localStorage.getItem('adminToken');\n    const adminData = localStorage.getItem('adminData');\n    if (token && adminData) {\n      try {\n        const parsedAdmin = JSON.parse(adminData);\n        setAdmin(parsedAdmin);\n        setIsAuthenticated(true);\n        // Set the token in axios headers\n        api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      } catch (error) {\n        console.error('Error parsing admin data:', error);\n        localStorage.removeItem('adminToken');\n        localStorage.removeItem('adminData');\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = async credentials => {\n    try {\n      setLoading(true);\n      const response = await api.post('/api/Admin/signin', credentials);\n      if (response.data.success) {\n        const {\n          token,\n          data\n        } = response.data;\n        const adminData = data.admin;\n\n        // Store token and admin data\n        localStorage.setItem('adminToken', token);\n        localStorage.setItem('adminData', JSON.stringify(adminData));\n\n        // Set axios default header\n        api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n        // Update state\n        setAdmin(adminData);\n        setIsAuthenticated(true);\n        toast.success('Login successful!');\n        return {\n          success: true\n        };\n      } else {\n        toast.error(response.data.message || 'Login failed');\n        return {\n          success: false,\n          message: response.data.message\n        };\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed. Please try again.';\n      toast.error(errorMessage);\n      return {\n        success: false,\n        message: errorMessage\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    // Clear storage\n    localStorage.removeItem('adminToken');\n    localStorage.removeItem('adminData');\n\n    // Clear axios header\n    delete api.defaults.headers.common['Authorization'];\n\n    // Update state\n    setAdmin(null);\n    setIsAuthenticated(false);\n    toast.info('Logged out successfully');\n  };\n  const value = {\n    isAuthenticated,\n    admin,\n    loading,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"FIui8k98dtYv6gQ3tSMBcjASx7I=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","toast","api","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","admin","setAdmin","loading","setLoading","token","localStorage","getItem","adminData","parsedAdmin","JSON","parse","defaults","headers","common","error","console","removeItem","login","credentials","response","post","data","success","setItem","stringify","message","_error$response","_error$response$data","errorMessage","logout","info","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Mostafa/Work/node-project/Node-project/admin-dashboard/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport api from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [admin, setAdmin] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Check if user is already logged in on app start\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('adminToken');\r\n    const adminData = localStorage.getItem('adminData');\r\n    \r\n    if (token && adminData) {\r\n      try {\r\n        const parsedAdmin = JSON.parse(adminData);\r\n        setAdmin(parsedAdmin);\r\n        setIsAuthenticated(true);\r\n        // Set the token in axios headers\r\n        api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      } catch (error) {\r\n        console.error('Error parsing admin data:', error);\r\n        localStorage.removeItem('adminToken');\r\n        localStorage.removeItem('adminData');\r\n      }\r\n    }\r\n    \r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await api.post('/api/Admin/signin', credentials);\r\n      \r\n      if (response.data.success) {\r\n        const { token, data } = response.data;\r\n        const adminData = data.admin;\r\n        \r\n        // Store token and admin data\r\n        localStorage.setItem('adminToken', token);\r\n        localStorage.setItem('adminData', JSON.stringify(adminData));\r\n        \r\n        // Set axios default header\r\n        api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n        \r\n        // Update state\r\n        setAdmin(adminData);\r\n        setIsAuthenticated(true);\r\n        \r\n        toast.success('Login successful!');\r\n        return { success: true };\r\n      } else {\r\n        toast.error(response.data.message || 'Login failed');\r\n        return { success: false, message: response.data.message };\r\n      }\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || 'Login failed. Please try again.';\r\n      toast.error(errorMessage);\r\n      return { success: false, message: errorMessage };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    // Clear storage\r\n    localStorage.removeItem('adminToken');\r\n    localStorage.removeItem('adminData');\r\n    \r\n    // Clear axios header\r\n    delete api.defaults.headers.common['Authorization'];\r\n    \r\n    // Update state\r\n    setAdmin(null);\r\n    setIsAuthenticated(false);\r\n    \r\n    toast.info('Logged out successfully');\r\n  };\r\n\r\n  const value = {\r\n    isAuthenticated,\r\n    admin,\r\n    loading,\r\n    login,\r\n    logout\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}